/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package superAdminPanel;

import classes.Model_card;
import classes.ScrollBar;
import connection.Connect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Hector
 */
public class dashboardPanel extends javax.swing.JPanel {

  Connection con;
    PreparedStatement pst;
    ResultSet rs;
     
    
    
    public dashboardPanel() {
        initComponents();
       con = Connect.con();
        
        
        
       ;
         
      
         
         
         dashboardTable_Scroll.setVerticalScrollBar(new ScrollBar());
         
         //display total population
          try {
            pst = con.prepareCall("SELECT COUNT(*) FROM person WHERE id>0;");
            rs = pst.executeQuery();
         
            while(rs.next()){
                int i = rs.getInt(1);
                String value = String.valueOf(i);
            card1.setData(new Model_card("Total Population",value));
        }
        } catch (Exception e) {
             e.printStackTrace();
        }
            //display total Female
          
          try {
            pst = con.prepareCall("SELECT COUNT(*) FROM person WHERE gender= \"Female\";");
            rs = pst.executeQuery();
         
            while(rs.next()){
                int i = rs.getInt(1);
                String value = String.valueOf(i);
            card2.setData(new Model_card("Total Female",value));
        }
        } catch (Exception e) {
             e.printStackTrace();
        }
            //display total Male
          
          try {
            pst = con.prepareCall("SELECT COUNT(*) FROM person WHERE gender= \"Male\";");
            rs = pst.executeQuery();
         
            while(rs.next()){
                int i = rs.getInt(1);
                String value = String.valueOf(i);
            card3.setData(new Model_card("Total Male",value));
        }
        } catch (Exception e) {
             e.printStackTrace();
        }
         
            //display total Purok
          
          try {
            pst = con.prepareCall("SELECT COUNT(*) FROM purok WHERE id>0;");
            rs = pst.executeQuery();
         
            while(rs.next()){
                int i = rs.getInt(1);
                String value = String.valueOf(i);
            card4.setData(new Model_card("Total Number of Puroks",value));
        }
        } catch (Exception e) {
             e.printStackTrace();
        }
          
          //display number of household
          
          try {
            pst = con.prepareCall("SELECT COUNT(*) FROM household WHERE id>0;");
            rs = pst.executeQuery();
         
            while(rs.next()){
                int i = rs.getInt(1);
                String value = String.valueOf(i);
            card5.setData(new Model_card("Total Households",value));
        }
        } catch (Exception e) {
             e.printStackTrace();
        }
          //display number of officials
          
          try {
            pst = con.prepareCall("SELECT COUNT(*) FROM brgy_officials WHERE id>0;");
            rs = pst.executeQuery();
         
            while(rs.next()){
                int i = rs.getInt(1);
                String value = String.valueOf(i);
            card6.setData(new Model_card("Barangay Officials",value));
        }
        } catch (Exception e) {
             e.printStackTrace();
        }
         
         
         
         
         
         try {
            pst = con.prepareCall("SELECT * FROM `brgy_officials` ");
            rs = pst.executeQuery();
            
            while(rs.next()){
            Object[] rowdata = new Object[4];
            
            for(int i = 0; i < 4; i++){
            
                rowdata[i] =rs.getObject(i+1);
            
            }
            tableDashnoard.addRow(rowdata);
            
            }
        } catch (SQLException ex) {  
            Logger.getLogger(dashboardPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        card1 = new panel.Card();
        card2 = new panel.Card();
        card3 = new panel.Card();
        card4 = new panel.Card();
        card5 = new panel.Card();
        card6 = new panel.Card();
        jLabel1 = new javax.swing.JLabel();
        panelBorder1 = new panel.panelBorder();
        dashboardTable_Scroll = new javax.swing.JScrollPane();
        tableDashnoard = new classes.Table();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1053, 647));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.GridLayout(2, 3, 10, 10));

        card1.setColor1(new java.awt.Color(245, 176, 65));
        card1.setColor2(new java.awt.Color(255, 127, 80));
        jPanel1.add(card1);

        card2.setColor1(new java.awt.Color(187, 143, 206));
        card2.setColor2(new java.awt.Color(17, 122, 101));
        jPanel1.add(card2);

        card3.setColor1(new java.awt.Color(236, 112, 99));
        card3.setColor2(new java.awt.Color(202, 111, 30));
        jPanel1.add(card3);

        card4.setColor1(new java.awt.Color(247, 220, 111));
        card4.setColor2(new java.awt.Color(22, 160, 133));
        jPanel1.add(card4);

        card5.setColor1(new java.awt.Color(84, 153, 199));
        card5.setColor2(new java.awt.Color(142, 68, 173));
        jPanel1.add(card5);

        card6.setColor1(new java.awt.Color(72, 201, 176));
        card6.setColor2(new java.awt.Color(41, 128, 185));
        jPanel1.add(card6);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("DASHBOARD");

        panelBorder1.setBackground(new java.awt.Color(214, 214, 214));

        tableDashnoard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID no.", "Fullname", "Position", "Purok Assigned"
            }
        ));
        tableDashnoard.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        dashboardTable_Scroll.setViewportView(tableDashnoard);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(76, 76, 76));
        jLabel2.setText("List of Officials");

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dashboardTable_Scroll)
                    .addGroup(panelBorder1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dashboardTable_Scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1077, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(panelBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private panel.Card card1;
    private panel.Card card2;
    private panel.Card card3;
    private panel.Card card4;
    private panel.Card card5;
    private panel.Card card6;
    private javax.swing.JScrollPane dashboardTable_Scroll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private panel.panelBorder panelBorder1;
    private classes.Table tableDashnoard;
    // End of variables declaration//GEN-END:variables
}
